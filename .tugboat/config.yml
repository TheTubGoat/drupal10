# Define the services Drupal needs to run.
services:
  # Define the database service.
  database:
    image: tugboatqa/mariadb:10.5
    commands:
      # Configure the server for the site to run on.
      init:
        # Adjust memory limits and configuration to fit Drupal.
        # Increase the allowed packet size to 512MB.
        - mysql -e "SET GLOBAL max_allowed_packet=536870912;"
        # Ensure this packet size persists even if MySQL restarts.
        - echo "max_allowed_packet=536870912" >> /etc/mysql/conf.d/tugboat.cnf


      # Install any assets and libraries that this database needs, like...the database.
      update:
        # Fetch and install the database dump from an upstream environment.
        - wget https://raw.githubusercontent.com/TheTubGoat/drupal10/stage/tugboatdb.sql.gz -O /tmp/tugboatdb.sql.gz
        - zcat /tmp/tugboatdb.sql.gz | mysql tugboat
        - rm /tmp/tugboatdb.sql.gz

      # Run any scripts needed to prepare the database for use.
      build:
      # There are generally no build steps at the database level.


  # Define the webserver service.
  webserver:
    image: tugboatqa/php:8.1-apache

    # Set this as the default service. This does a few things
    #   1. Clones the git repository into the service container
    #   2. Exposes port 80 to the Tugboat HTTP proxy
    #   3. Routes requests to the preview URL to this service
    default: true

    # Wait until the mysql service is done building.
    depends: database

    commands:
      # Configure the webserver to support Drupal.
      init:
        # Install any extra modules Drupal needs.
        - docker-php-ext-install opcache
        - a2enmod headers rewrite

        # Create any directories Drupal needs outside the docroot.

        # Tell Tugboat where our webroot is.
        - ln -snf "${TUGBOAT_ROOT}/web" "${DOCROOT}"

      # Install any assets and libraries that our site needs to operate.
      update:
        # Install/update packages managed by composer, including Drush and Stage File Proxy.
        - composer install --optimize-autoloader
        - composer require --dev drupal/stage_file_proxy

        # Set our tugboat-specific Drupal settings.
        - cp "${TUGBOAT_ROOT}/.tugboat/settings.local.php" "${DOCROOT}/sites/default/settings.local.php"

        # Link our custom code.
        - ln -snf "${TUGBOAT_ROOT}/custom/themes" "${DOCROOT}/themes/custom"

        # Make sure our public files and folders exist and are writable.
        - mkdir -p "${DOCROOT}/sites/default/files/translations"
        - chgrp -R www-data "${DOCROOT}/sites/default/files"
        - find "${DOCROOT}/sites/default/files" -type d -exec chmod 2775 {} \;
        - find "${DOCROOT}/sites/default/files" -type f -exec chmod 0664 {} \;

      # Run any scripts that Drupal needs to prepare for use after code changes.
      build:
        # Install new configuration and database updates.
        - vendor/bin/drush cache:rebuild
        - vendor/bin/drush config:import -y
        - vendor/bin/drush updatedb -y

        # If you are downloading your files from a remove server, you won't need
        # to enable Stage File Proxy.
        - vendor/bin/drush pm:enable --yes stage_file_proxy
        - vendor/bin/drush config:set --yes stage_file_proxy.settings origin "https://stage-ieqdliqcwphkgzgs5hp16epdl1yygr5h.tugboatqa.com"
        - vendor/bin/drush config:set --yes stage_file_proxy.settings origin_dir "sites/default/files"

        # One last cache rebuild.
        - vendor/bin/drush cache:rebuild
